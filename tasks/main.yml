---
- name: Adjust vm.max_map_count
  sysctl:
    name: vm.max_map_count
    value: '{{ es_lb_max_map_count }}'
    state: present
    reload: true

- name: Fix conf folder permissions
  file:
    path: '{{ es_lb_docker_dir }}/conf'
    group: 1000
    mode: 0755

- name: Create directory for config files
  file:
    path: '{{ es_lb_docker_dir }}/conf/ingest-geoip'
    state: directory

- name: Fetch available elasticsearch nodes
  uri:
    url: 'http://localhost:8500/v1/catalog/service/elasticsearch?dc={{ es_lb_data_center }}'
  register: es_lb_services

- name: Create config files
  template:
    src: '{{ item }}'
    dest: '{{ es_lb_docker_dir }}/conf/{{ item | basename | replace(".j2", "") }}'
  register: es_lb_config
  with_fileglob:
    - templates/*

- name: Start container
  docker_container:
    name: '{{ es_lb_cont_name }}'
    image: '{{ es_lb_image }}'
    pull: true
    restart_policy: always
    state: '{{ cont_state }}'
    recreate: '{{ cont_recreate }}'
    restart: '{{ es_lb_config.changed | default(cont_restart) }}'
    ports:
      - '0.0.0.0:{{ es_lb_api_port }}:{{ es_lb_api_port }}'
      - '0.0.0.0:{{ es_lb_node_port }}:{{ es_lb_node_port }}'
    volumes:
      - '{{ es_lb_docker_dir }}/conf/:/usr/share/elasticsearch/config/'

- name: Create Consul service definition
  include_role: name=consul-service
  vars:
    consul_config_name: '{{ es_lb_cont_name }}'
    consul_services:
      - name: '{{ es_lb_cont_name }}'
        tags: ['logging']
        # we advertise the port with basic auth
        port: '{{ es_lb_api_port }}'
        address: '{{ ansible_local.tinc.vpn_ip }}'
        checks:
          - id: '{{ es_lb_cont_name }}-health'
            name: ElasticSearch Healthcheck
            type: http
            http: 'http://localhost:{{ es_lb_api_port }}/?pretty'
